{
  "version": 3,
  "sources": ["empty-module:@remix-run/node", "../../../@/components/function/DefaultFunctionDetailPanel.tsx", "../../../@/components/ui/dropdown-menu.tsx", "../../../node_modules/.pnpm/@radix-ui+react-dropdown-menu@2.1.1_@types+react-dom@18.3.0_@types+react@18.3.3_react-dom@18._hfj62zklt5zw6dxs7nv7d5revq/node_modules/@radix-ui/react-dropdown-menu/src/DropdownMenu.tsx", "../../../@/components/function/LlmFunctionDetailPanel.tsx", "../../../@/components/function/FunctionDetailPanel.tsx"],
  "sourcesContent": ["module.exports = {};", "// @/components/function/DefaultFunctionDetailPanel.tsx\nimport { DEFAULT_FUNCTIONS } from \"@/fixtures\";\nimport { validateFunction } from \"@/lib/function\";\nimport { cn } from \"@/lib/utils\";\nimport { javascript } from \"@codemirror/lang-javascript\";\nimport { Link, useNavigate } from \"@remix-run/react\";\nimport { vscodeDark, vscodeLight } from \"@uiw/codemirror-theme-vscode\";\nimport CodeMirror, { EditorView } from \"@uiw/react-codemirror\";\nimport { Copy, MoreHorizontal, Trash } from \"lucide-react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useTheme } from \"remix-themes\";\nimport {\n  type UpdateFunctionArgsType,\n  useCreateFunction,\n  useDeleteFunction,\n  useFunction,\n  useUpdateFunction,\n} from \"../../hooks/useFunction\";\nimport { AutoResizeTextarea } from \"../AutoResizeTextarea\";\nimport { Badge } from \"../ui/badge\";\nimport { Button } from \"../ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"../ui/dropdown-menu\";\nimport { Input } from \"../ui/input\";\n\ntype DefaultFunctionDetailPanelProps = {\n  id: string;\n  showMenuButton?: boolean;\n};\n\nexport function DefaultFunctionDetailPanel({\n  id,\n  showMenuButton = true,\n}: DefaultFunctionDetailPanelProps) {\n  const { data: functionData } = useFunction(id);\n  const { mutateAsync: callUpdate } = useUpdateFunction();\n  const [functionState, setFunctionState] = useState<UpdateFunctionArgsType>({\n    id,\n    functionName: \"\",\n    functionBody: \"\",\n    description: \"\",\n  });\n  const [showSaved, setShowSaved] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [resolvedTheme] = useTheme();\n  const createFunction = useCreateFunction();\n\n  const deleteFunction = useDeleteFunction();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (functionData) {\n      setFunctionState({\n        id: functionData.id,\n        functionName: functionData.functionName,\n        functionBody: functionData.functionBody,\n        description: functionData.description || \"\",\n      });\n    }\n  }, [functionData]);\n\n  const validateFunctionCb = useCallback((code: string) => {\n    try {\n      validateFunction(code);\n      setError(null);\n      return true;\n    } catch (e) {\n      if (e instanceof Error) {\n        setError(e.message);\n      }\n      return false;\n    }\n  }, []);\n\n  const isDefaultFunction = (id: string) => {\n    return DEFAULT_FUNCTIONS.map((func) => func.id).includes(id);\n  };\n\n  const handleChange = useCallback(\n    async (newState: UpdateFunctionArgsType) => {\n      validateFunctionCb(newState.functionBody);\n      setFunctionState(newState);\n      await callUpdate(newState);\n      setShowSaved(true);\n    },\n    [callUpdate, validateFunctionCb]\n  );\n\n  const handleCopy = useCallback(async () => {\n\n    const createdFunction = await createFunction.mutateAsync({\n      functionName: functionState.functionName,\n      functionBody: functionState.functionBody,\n      description: functionState.description,\n    });\n    navigate(`/function/${createdFunction.id}`);\n  }, [createFunction, functionState, navigate]);\n\n  const handleDelete = useCallback(async () => {\n    await deleteFunction.mutateAsync(id);\n    navigate(-1);\n  }, [deleteFunction, id, navigate]);\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout;\n    if (showSaved) {\n      timeoutId = setTimeout(() => {\n        setShowSaved(false);\n      }, 2000);\n    }\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [showSaved]);\n\n  return (\n    <div className=\"flex flex-col w-full\">\n      {/** Header */}\n      <div className=\"flex-shrink-0 flex w-full px-2 md:px-4 bg-white dark:bg-stone-950 border-b border-stone-200 dark:border-stone-800 h-10\">\n        <div className=\"flex gap-1 items-center justify-between w-full\">\n          <Link to={`/function/${functionState.id}`} className=\"\">\n            <p className=\"text-xsm\">\n              {functionState.functionName}-{functionState.id.slice(0, 6)}\n            </p>\n          </Link>\n          {showMenuButton && (\n            <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <Button variant=\"ghost\" size=\"sm\">\n                  <MoreHorizontal className=\"h-4 w-4\" />\n                </Button>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent align=\"end\">\n                <DropdownMenuItem onClick={handleCopy}>\n                  <div className=\"flex items-center gap-2\">\n                    <Copy size={16} />\n                    <p>Clone</p>\n                  </div>\n                </DropdownMenuItem>\n                <DropdownMenuItem onClick={handleDelete}>\n                  <div className=\"flex items-center gap-2\">\n                    <Trash size={16} />\n                    <p>Delete</p>\n                  </div>\n                </DropdownMenuItem>\n              </DropdownMenuContent>\n            </DropdownMenu>\n          )}\n        </div>\n      </div>\n      <div className=\"flex flex-col flex-shrink-0 w-full space-y-4 px-6 py-8 items-center\">\n        <div className=\"max-w-screen-md flex w-full flex-col gap-4\">\n          <div className=\"flex flex-col gap-1\">\n            <div>\n              <Badge className=\"text-xs w-auto px-2 py-1\" variant=\"secondary\">\n                {isDefaultFunction(functionState.id)\n                  ? \"Default function\"\n                  : \"Custom function\"}\n              </Badge>\n            </div>\n            {/** Header */}\n            <div className=\"flex w-full items-center space-x-2\">\n              <Input\n                className={cn(\n                  \"w-full font-[500] text-xl border-none disabled:opacity-100 px-0\"\n                )}\n                value={functionState.functionName}\n                onChange={(e) => {\n                  handleChange({\n                    ...functionState,\n                    functionName: e.target.value,\n                  });\n                }}\n                disabled={isDefaultFunction(functionState.id)}\n              />\n              <div>\n                {showSaved && <p className=\"text-xs text-stone-500\">Saved</p>}\n              </div>\n            </div>\n            <AutoResizeTextarea\n              className=\"text-sm border-none disabled:opacity-100 px-0\"\n              placeholder=\"Add description...\"\n              value={functionState.description}\n              onChange={(e) => {\n                handleChange({\n                  ...functionState,\n                  description: e.target.value,\n                });\n              }}\n              disabled={isDefaultFunction(functionState.id)}\n              minRows={1}\n              maxRows={10}\n            />\n          </div>\n          <div className=\"flex flex-col space-y-2\">\n            <CodeMirror\n              className={\n                cn(\"text-xs rounded-lg overflow-hidden\")\n              }\n              theme={resolvedTheme === \"dark\" ? vscodeDark : vscodeLight}\n              extensions={[\n                javascript({ typescript: true }),\n                EditorView.lineWrapping,\n              ]}\n              value={functionState.functionBody}\n              onChange={(value) => {\n                handleChange({ ...functionState, functionBody: value });\n              }}\n              editable={!isDefaultFunction(functionState.id)}\n              readOnly={isDefaultFunction(functionState.id)}\n            />\n            {error && <p className=\"text-red-400 text-sm\">{error}</p>}\n            {!error && isDefaultFunction(functionState.id) && (\n              <p className=\"text-xs text-stone-500\">\n                {`This is a default function. You can't edit it.\n                  You can clone it to create a new function.`}\n              </p>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-stone-100 data-[state=open]:bg-stone-100 dark:focus:bg-stone-800 dark:data-[state=open]:bg-stone-800\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border border-stone-200 bg-white p-1 text-stone-900 shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-stone-800 dark:bg-stone-900 dark:text-stone-50\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border border-stone-200 bg-white p-1 text-stone-900 shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-stone-800 dark:bg-stone-900 dark:text-stone-50\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-xs outline-none transition-colors focus:bg-stone-100 focus:text-stone-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-stone-800 dark:focus:text-stone-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-stone-100 focus:text-stone-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-stone-800 dark:focus:text-stone-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-stone-100 focus:text-stone-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-stone-800 dark:focus:text-stone-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-stone-100 dark:bg-stone-800\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as MenuPrimitive from '@radix-ui/react-menu';\nimport { createMenuScope } from '@radix-ui/react-menu';\nimport { useId } from '@radix-ui/react-id';\n\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenu\n * -----------------------------------------------------------------------------------------------*/\n\nconst DROPDOWN_MENU_NAME = 'DropdownMenu';\n\ntype ScopedProps<P> = P & { __scopeDropdownMenu?: Scope };\nconst [createDropdownMenuContext, createDropdownMenuScope] = createContextScope(\n  DROPDOWN_MENU_NAME,\n  [createMenuScope]\n);\nconst useMenuScope = createMenuScope();\n\ntype DropdownMenuContextValue = {\n  triggerId: string;\n  triggerRef: React.RefObject<HTMLButtonElement>;\n  contentId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  modal: boolean;\n};\n\nconst [DropdownMenuProvider, useDropdownMenuContext] =\n  createDropdownMenuContext<DropdownMenuContextValue>(DROPDOWN_MENU_NAME);\n\ninterface DropdownMenuProps {\n  children?: React.ReactNode;\n  dir?: Direction;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  modal?: boolean;\n}\n\nconst DropdownMenu: React.FC<DropdownMenuProps> = (props: ScopedProps<DropdownMenuProps>) => {\n  const {\n    __scopeDropdownMenu,\n    children,\n    dir,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = true,\n  } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <DropdownMenuProvider\n      scope={__scopeDropdownMenu}\n      triggerId={useId()}\n      triggerRef={triggerRef}\n      contentId={useId()}\n      open={open}\n      onOpenChange={setOpen}\n      onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n      modal={modal}\n    >\n      <MenuPrimitive.Root {...menuScope} open={open} onOpenChange={setOpen} dir={dir} modal={modal}>\n        {children}\n      </MenuPrimitive.Root>\n    </DropdownMenuProvider>\n  );\n};\n\nDropdownMenu.displayName = DROPDOWN_MENU_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'DropdownMenuTrigger';\n\ntype DropdownMenuTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface DropdownMenuTriggerProps extends PrimitiveButtonProps {}\n\nconst DropdownMenuTrigger = React.forwardRef<DropdownMenuTriggerElement, DropdownMenuTriggerProps>(\n  (props: ScopedProps<DropdownMenuTriggerProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, disabled = false, ...triggerProps } = props;\n    const context = useDropdownMenuContext(TRIGGER_NAME, __scopeDropdownMenu);\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return (\n      <MenuPrimitive.Anchor asChild {...menuScope}>\n        <Primitive.button\n          type=\"button\"\n          id={context.triggerId}\n          aria-haspopup=\"menu\"\n          aria-expanded={context.open}\n          aria-controls={context.open ? context.contentId : undefined}\n          data-state={context.open ? 'open' : 'closed'}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          {...triggerProps}\n          ref={composeRefs(forwardedRef, context.triggerRef)}\n          onPointerDown={composeEventHandlers(props.onPointerDown, (event) => {\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click)\n            if (!disabled && event.button === 0 && event.ctrlKey === false) {\n              context.onOpenToggle();\n              // prevent trigger focusing when opening\n              // this allows the content to be given focus without competition\n              if (!context.open) event.preventDefault();\n            }\n          })}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if (disabled) return;\n            if (['Enter', ' '].includes(event.key)) context.onOpenToggle();\n            if (event.key === 'ArrowDown') context.onOpenChange(true);\n            // prevent keydown from scrolling window / first focused item to execute\n            // that keydown (inadvertently closing the menu)\n            if (['Enter', ' ', 'ArrowDown'].includes(event.key)) event.preventDefault();\n          })}\n        />\n      </MenuPrimitive.Anchor>\n    );\n  }\n);\n\nDropdownMenuTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'DropdownMenuPortal';\n\ntype MenuPortalProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Portal>;\ninterface DropdownMenuPortalProps extends MenuPortalProps {}\n\nconst DropdownMenuPortal: React.FC<DropdownMenuPortalProps> = (\n  props: ScopedProps<DropdownMenuPortalProps>\n) => {\n  const { __scopeDropdownMenu, ...portalProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.Portal {...menuScope} {...portalProps} />;\n};\n\nDropdownMenuPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'DropdownMenuContent';\n\ntype DropdownMenuContentElement = React.ElementRef<typeof MenuPrimitive.Content>;\ntype MenuContentProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Content>;\ninterface DropdownMenuContentProps extends Omit<MenuContentProps, 'onEntryFocus'> {}\n\nconst DropdownMenuContent = React.forwardRef<DropdownMenuContentElement, DropdownMenuContentProps>(\n  (props: ScopedProps<DropdownMenuContentProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...contentProps } = props;\n    const context = useDropdownMenuContext(CONTENT_NAME, __scopeDropdownMenu);\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    const hasInteractedOutsideRef = React.useRef(false);\n\n    return (\n      <MenuPrimitive.Content\n        id={context.contentId}\n        aria-labelledby={context.triggerId}\n        {...menuScope}\n        {...contentProps}\n        ref={forwardedRef}\n        onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n          if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n          hasInteractedOutsideRef.current = false;\n          // Always prevent auto focus because we either focus manually or want user agent focus\n          event.preventDefault();\n        })}\n        onInteractOutside={composeEventHandlers(props.onInteractOutside, (event) => {\n          const originalEvent = event.detail.originalEvent as PointerEvent;\n          const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n          const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n          if (!context.modal || isRightClick) hasInteractedOutsideRef.current = true;\n        })}\n        style={{\n          ...props.style,\n          // re-namespace exposed content custom properties\n          ...{\n            '--radix-dropdown-menu-content-transform-origin':\n              'var(--radix-popper-transform-origin)',\n            '--radix-dropdown-menu-content-available-width': 'var(--radix-popper-available-width)',\n            '--radix-dropdown-menu-content-available-height':\n              'var(--radix-popper-available-height)',\n            '--radix-dropdown-menu-trigger-width': 'var(--radix-popper-anchor-width)',\n            '--radix-dropdown-menu-trigger-height': 'var(--radix-popper-anchor-height)',\n          },\n        }}\n      />\n    );\n  }\n);\n\nDropdownMenuContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'DropdownMenuGroup';\n\ntype DropdownMenuGroupElement = React.ElementRef<typeof MenuPrimitive.Group>;\ntype MenuGroupProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Group>;\ninterface DropdownMenuGroupProps extends MenuGroupProps {}\n\nconst DropdownMenuGroup = React.forwardRef<DropdownMenuGroupElement, DropdownMenuGroupProps>(\n  (props: ScopedProps<DropdownMenuGroupProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...groupProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Group {...menuScope} {...groupProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'DropdownMenuLabel';\n\ntype DropdownMenuLabelElement = React.ElementRef<typeof MenuPrimitive.Label>;\ntype MenuLabelProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Label>;\ninterface DropdownMenuLabelProps extends MenuLabelProps {}\n\nconst DropdownMenuLabel = React.forwardRef<DropdownMenuLabelElement, DropdownMenuLabelProps>(\n  (props: ScopedProps<DropdownMenuLabelProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...labelProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Label {...menuScope} {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'DropdownMenuItem';\n\ntype DropdownMenuItemElement = React.ElementRef<typeof MenuPrimitive.Item>;\ntype MenuItemProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Item>;\ninterface DropdownMenuItemProps extends MenuItemProps {}\n\nconst DropdownMenuItem = React.forwardRef<DropdownMenuItemElement, DropdownMenuItemProps>(\n  (props: ScopedProps<DropdownMenuItemProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...itemProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Item {...menuScope} {...itemProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuCheckboxItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst CHECKBOX_ITEM_NAME = 'DropdownMenuCheckboxItem';\n\ntype DropdownMenuCheckboxItemElement = React.ElementRef<typeof MenuPrimitive.CheckboxItem>;\ntype MenuCheckboxItemProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.CheckboxItem>;\ninterface DropdownMenuCheckboxItemProps extends MenuCheckboxItemProps {}\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  DropdownMenuCheckboxItemElement,\n  DropdownMenuCheckboxItemProps\n>((props: ScopedProps<DropdownMenuCheckboxItemProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...checkboxItemProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.CheckboxItem {...menuScope} {...checkboxItemProps} ref={forwardedRef} />;\n});\n\nDropdownMenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuRadioGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_GROUP_NAME = 'DropdownMenuRadioGroup';\n\ntype DropdownMenuRadioGroupElement = React.ElementRef<typeof MenuPrimitive.RadioGroup>;\ntype MenuRadioGroupProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.RadioGroup>;\ninterface DropdownMenuRadioGroupProps extends MenuRadioGroupProps {}\n\nconst DropdownMenuRadioGroup = React.forwardRef<\n  DropdownMenuRadioGroupElement,\n  DropdownMenuRadioGroupProps\n>((props: ScopedProps<DropdownMenuRadioGroupProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...radioGroupProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.RadioGroup {...menuScope} {...radioGroupProps} ref={forwardedRef} />;\n});\n\nDropdownMenuRadioGroup.displayName = RADIO_GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuRadioItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_ITEM_NAME = 'DropdownMenuRadioItem';\n\ntype DropdownMenuRadioItemElement = React.ElementRef<typeof MenuPrimitive.RadioItem>;\ntype MenuRadioItemProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.RadioItem>;\ninterface DropdownMenuRadioItemProps extends MenuRadioItemProps {}\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  DropdownMenuRadioItemElement,\n  DropdownMenuRadioItemProps\n>((props: ScopedProps<DropdownMenuRadioItemProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...radioItemProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.RadioItem {...menuScope} {...radioItemProps} ref={forwardedRef} />;\n});\n\nDropdownMenuRadioItem.displayName = RADIO_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'DropdownMenuItemIndicator';\n\ntype DropdownMenuItemIndicatorElement = React.ElementRef<typeof MenuPrimitive.ItemIndicator>;\ntype MenuItemIndicatorProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.ItemIndicator>;\ninterface DropdownMenuItemIndicatorProps extends MenuItemIndicatorProps {}\n\nconst DropdownMenuItemIndicator = React.forwardRef<\n  DropdownMenuItemIndicatorElement,\n  DropdownMenuItemIndicatorProps\n>((props: ScopedProps<DropdownMenuItemIndicatorProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...itemIndicatorProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.ItemIndicator {...menuScope} {...itemIndicatorProps} ref={forwardedRef} />;\n});\n\nDropdownMenuItemIndicator.displayName = INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'DropdownMenuSeparator';\n\ntype DropdownMenuSeparatorElement = React.ElementRef<typeof MenuPrimitive.Separator>;\ntype MenuSeparatorProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Separator>;\ninterface DropdownMenuSeparatorProps extends MenuSeparatorProps {}\n\nconst DropdownMenuSeparator = React.forwardRef<\n  DropdownMenuSeparatorElement,\n  DropdownMenuSeparatorProps\n>((props: ScopedProps<DropdownMenuSeparatorProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...separatorProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.Separator {...menuScope} {...separatorProps} ref={forwardedRef} />;\n});\n\nDropdownMenuSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'DropdownMenuArrow';\n\ntype DropdownMenuArrowElement = React.ElementRef<typeof MenuPrimitive.Arrow>;\ntype MenuArrowProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Arrow>;\ninterface DropdownMenuArrowProps extends MenuArrowProps {}\n\nconst DropdownMenuArrow = React.forwardRef<DropdownMenuArrowElement, DropdownMenuArrowProps>(\n  (props: ScopedProps<DropdownMenuArrowProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...arrowProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Arrow {...menuScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuArrow.displayName = ARROW_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSub\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DropdownMenuSubProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n}\n\nconst DropdownMenuSub: React.FC<DropdownMenuSubProps> = (\n  props: ScopedProps<DropdownMenuSubProps>\n) => {\n  const { __scopeDropdownMenu, children, open: openProp, onOpenChange, defaultOpen } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <MenuPrimitive.Sub {...menuScope} open={open} onOpenChange={setOpen}>\n      {children}\n    </MenuPrimitive.Sub>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSubTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_TRIGGER_NAME = 'DropdownMenuSubTrigger';\n\ntype DropdownMenuSubTriggerElement = React.ElementRef<typeof MenuPrimitive.SubTrigger>;\ntype MenuSubTriggerProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.SubTrigger>;\ninterface DropdownMenuSubTriggerProps extends MenuSubTriggerProps {}\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  DropdownMenuSubTriggerElement,\n  DropdownMenuSubTriggerProps\n>((props: ScopedProps<DropdownMenuSubTriggerProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...subTriggerProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.SubTrigger {...menuScope} {...subTriggerProps} ref={forwardedRef} />;\n});\n\nDropdownMenuSubTrigger.displayName = SUB_TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSubContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_CONTENT_NAME = 'DropdownMenuSubContent';\n\ntype DropdownMenuSubContentElement = React.ElementRef<typeof MenuPrimitive.Content>;\ntype MenuSubContentProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.SubContent>;\ninterface DropdownMenuSubContentProps extends MenuSubContentProps {}\n\nconst DropdownMenuSubContent = React.forwardRef<\n  DropdownMenuSubContentElement,\n  DropdownMenuSubContentProps\n>((props: ScopedProps<DropdownMenuSubContentProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...subContentProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n\n  return (\n    <MenuPrimitive.SubContent\n      {...menuScope}\n      {...subContentProps}\n      ref={forwardedRef}\n      style={{\n        ...props.style,\n        // re-namespace exposed content custom properties\n        ...{\n          '--radix-dropdown-menu-content-transform-origin': 'var(--radix-popper-transform-origin)',\n          '--radix-dropdown-menu-content-available-width': 'var(--radix-popper-available-width)',\n          '--radix-dropdown-menu-content-available-height': 'var(--radix-popper-available-height)',\n          '--radix-dropdown-menu-trigger-width': 'var(--radix-popper-anchor-width)',\n          '--radix-dropdown-menu-trigger-height': 'var(--radix-popper-anchor-height)',\n        },\n      }}\n    />\n  );\n});\n\nDropdownMenuSubContent.displayName = SUB_CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = DropdownMenu;\nconst Trigger = DropdownMenuTrigger;\nconst Portal = DropdownMenuPortal;\nconst Content = DropdownMenuContent;\nconst Group = DropdownMenuGroup;\nconst Label = DropdownMenuLabel;\nconst Item = DropdownMenuItem;\nconst CheckboxItem = DropdownMenuCheckboxItem;\nconst RadioGroup = DropdownMenuRadioGroup;\nconst RadioItem = DropdownMenuRadioItem;\nconst ItemIndicator = DropdownMenuItemIndicator;\nconst Separator = DropdownMenuSeparator;\nconst Arrow = DropdownMenuArrow;\nconst Sub = DropdownMenuSub;\nconst SubTrigger = DropdownMenuSubTrigger;\nconst SubContent = DropdownMenuSubContent;\n\nexport {\n  createDropdownMenuScope,\n  //\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuPortal,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuLabel,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuItemIndicator,\n  DropdownMenuSeparator,\n  DropdownMenuArrow,\n  DropdownMenuSub,\n  DropdownMenuSubTrigger,\n  DropdownMenuSubContent,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n};\nexport type {\n  DropdownMenuProps,\n  DropdownMenuTriggerProps,\n  DropdownMenuPortalProps,\n  DropdownMenuContentProps,\n  DropdownMenuGroupProps,\n  DropdownMenuLabelProps,\n  DropdownMenuItemProps,\n  DropdownMenuCheckboxItemProps,\n  DropdownMenuRadioGroupProps,\n  DropdownMenuRadioItemProps,\n  DropdownMenuItemIndicatorProps,\n  DropdownMenuSeparatorProps,\n  DropdownMenuArrowProps,\n  DropdownMenuSubProps,\n  DropdownMenuSubTriggerProps,\n  DropdownMenuSubContentProps,\n};\n", "// @/components/function/LlmFunctionDetailPanel.tsx\nimport { DEFAULT_FUNCTIONS, DEFAULT_RESOURCES } from \"@/fixtures\";\nimport { cn, extractMustacheVariables, validateJSON } from \"@/lib/utils\";\nimport { json } from \"@codemirror/lang-json\";\nimport { Link, useNavigate } from \"@remix-run/react\";\nimport { vscodeDark, vscodeLight } from \"@uiw/codemirror-theme-vscode\";\nimport CodeMirror, { EditorView } from \"@uiw/react-codemirror\";\nimport { Copy, MoreHorizontal, Trash } from \"lucide-react\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useTheme } from \"remix-themes\";\nimport {\n  type UpdateFunctionArgsType,\n  UpdateLLMFunctionArgsType,\n  useCreateLlmFunction,\n  useDeleteFunction,\n  useFunction,\n  useUpdateLlmFunction,\n} from \"../../hooks/useFunction\";\nimport { ArrayInput } from \"../ArrayInput\";\nimport { AutoResizeTextarea } from \"../AutoResizeTextarea\";\nimport { PromptInput } from \"../PromptInput\";\nimport { Badge } from \"../ui/badge\";\nimport { Button } from \"../ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"../ui/dropdown-menu\";\nimport { Input } from \"../ui/input\";\nimport { Label } from \"../ui/label\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"../ui/select\";\n\ntype LLMFunctionDetailPanelProps = {\n  id: string;\n  showMenuButton?: boolean;\n};\n\ntype CombinedState = UpdateFunctionArgsType & UpdateLLMFunctionArgsType;\n\nexport function LLMFunctionDetailPanel({\n  id,\n  showMenuButton = true,\n}: LLMFunctionDetailPanelProps) {\n  const { data: functionData } = useFunction(id);\n  const { mutateAsync: callUpdate } = useUpdateLlmFunction();\n  const [state, setState] = useState<CombinedState>({\n    id,\n    functionName:\n      functionData?.type === \"llm\" ? functionData?.functionName : \"\",\n    functionBody:\n      functionData?.type === \"llm\" ? functionData?.functionBody : \"\",\n    description: functionData?.type === \"llm\" ? functionData?.description : \"\",\n    resourceId: functionData?.type === \"llm\" ? functionData?.resourceId : \"\",\n    messages: functionData?.type === \"llm\" ? functionData?.messages : [],\n    model: functionData?.type === \"llm\" ? functionData?.model : \"\",\n    args: functionData?.type === \"llm\" ? functionData?.args ?? \"\" : \"\",\n    prompt: null,\n  });\n  const [outputPathStr, setOutputPathStr] = useState<string | null>(\n    functionData?.type === \"llm\" && functionData?.outputPath\n      ? functionData.outputPath.join(\",\")\n      : null\n  );\n  useEffect(() => {\n    if (functionData && functionData.type === \"llm\") {\n      setState({\n        id: functionData.id,\n        functionName: functionData.functionName,\n        functionBody: functionData.functionBody,\n        description: functionData.description,\n        resourceId: functionData.resourceId,\n        messages: functionData.messages,\n        model: functionData.model,\n        args: functionData.args ?? \"\",\n        prompt: functionData.prompt,\n        outputPath: functionData.outputPath,\n      });\n      setOutputPathStr(functionData.outputPath?.join(\",\") ?? \"\");\n    }\n  }, [functionData]);\n\n  const [showSaved, setShowSaved] = useState<boolean>(false);\n  const [resolvedTheme] = useTheme();\n  const [jsonError, setJsonError] = useState<string | null>(null);\n\n  const createLlmFunction = useCreateLlmFunction();\n  const deleteFunction = useDeleteFunction();\n  const navigate = useNavigate();\n  const isDefaultFunction = useCallback(\n    (id: string) => DEFAULT_FUNCTIONS.some((func) => func.id === id),\n    []\n  );\n\n  const handleChange = useCallback(\n    async (updatedFields: Partial<CombinedState>) => {\n      let diffExists = false;\n      Object.keys(updatedFields).forEach((key) => {\n        const typedKey = key as keyof CombinedState;\n        if (updatedFields[typedKey] !== undefined) {\n          if (\n            JSON.stringify(updatedFields[typedKey]) !==\n            JSON.stringify(state[typedKey])\n          ) {\n            diffExists = true;\n          }\n        }\n      });\n      if (!diffExists) {\n        return;\n      }\n      // console.log(\"updatedFields\", updatedFields, state);\n      const updatedState = { ...state, ...updatedFields };\n      setState(updatedState);\n      await callUpdate({\n        id: updatedState.id,\n        functionName: updatedState.functionName,\n        functionBody: updatedState.functionBody,\n        description: updatedState.description,\n        resourceId: updatedState.resourceId,\n        messages: updatedState.messages,\n        model: updatedState.model,\n        prompt: null,\n        args: updatedState.args,\n        outputPath: updatedState.outputPath,\n      });\n      setShowSaved(true);\n    },\n    [state, callUpdate]\n  );\n\n  const handleCopy = useCallback(async () => {\n    const createdFunction = await createLlmFunction.mutateAsync(state);\n    navigate(`/function/${createdFunction.id}`);\n  }, [createLlmFunction, state, navigate]);\n\n  const handleDelete = useCallback(async () => {\n    await deleteFunction.mutateAsync(id);\n    navigate(-1);\n  }, [deleteFunction, id, navigate]);\n\n  useEffect(() => {\n    if (showSaved) {\n      const timeoutId = setTimeout(() => setShowSaved(false), 2000);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [showSaved]);\n\n  const allVariables = useMemo(\n    () =>\n      state.messages.flatMap((message) =>\n        extractMustacheVariables(message.content)\n      ),\n    [state.messages]\n  );\n\n  const uniqueVariables = useMemo(\n    () => Array.from(new Set(allVariables)),\n    [allVariables]\n  );\n\n  const handleJsonChange = (value: string) => {\n    setState((prev) => ({ ...prev, args: value }));\n    const { error } = validateJSON(value);\n    setJsonError(error);\n    if (error !== null) {\n      handleChange({ args: value });\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col w-full max-h-[100dvh] overflow-y-auto\">\n      {/* Header */}\n      <div className=\"z-10 flex-shrink-0 sticky top-0 bg-white dark:bg-stone-950 flex w-full px-2 md:px-4 border-b border-stone-200 dark:border-stone-800 h-10\">\n        <div className=\"flex gap-1 items-center justify-between w-full\">\n          <Link to={`/function/${state.id}`} className=\"\">\n            <p className=\"text-xsm\">\n              {state.functionName}-{state.id.slice(0, 6)}\n            </p>\n          </Link>\n          {showMenuButton && (\n            <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <Button variant=\"ghost\" size=\"sm\">\n                  <MoreHorizontal className=\"h-4 w-4\" />\n                </Button>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent align=\"end\">\n                <DropdownMenuItem onClick={handleCopy}>\n                  <div className=\"flex items-center gap-2\">\n                    <Copy size={16} />\n                    <p>Clone</p>\n                  </div>\n                </DropdownMenuItem>\n                <DropdownMenuItem onClick={handleDelete}>\n                  <div className=\"flex items-center gap-2\">\n                    <Trash size={16} />\n                    <p>Delete</p>\n                  </div>\n                </DropdownMenuItem>\n              </DropdownMenuContent>\n            </DropdownMenu>\n          )}\n        </div>\n      </div>\n      <div className=\"z-1 flex flex-col flex-shrink-0 w-full space-y-4 px-6 py-8 items-center\">\n        <div className=\"flex flex-col gap-1 w-full max-w-screen-md overflow-y-auto\">\n          <div>\n            <Badge className=\"text-xs w-auto px-2 py-1\" variant=\"secondary\">\n              {isDefaultFunction(state.id)\n                ? \"Default function\"\n                : \"Custom function\"}\n            </Badge>\n          </div>\n          {/* Header */}\n          <div className=\"flex w-full items-center space-x-2\">\n            <Input\n              className={cn(\n                \"w-full font-[500] text-xl border-none disabled:opacity-100 px-0\"\n              )}\n              value={state.functionName}\n              onChange={(e) => handleChange({ functionName: e.target.value })}\n              disabled={isDefaultFunction(state.id)}\n            />\n            <div>\n              {showSaved && <p className=\"text-xs text-stone-500\">Saved</p>}\n            </div>\n          </div>\n          <AutoResizeTextarea\n            className=\"text-sm border-none disabled:opacity-100 px-0\"\n            placeholder=\"Add description...\"\n            value={state.description}\n            onChange={(e) => {\n              handleChange({\n                description:\n                  e.target.value === \"Add description...\" ? \"\" : e.target.value,\n              });\n            }}\n            disabled={isDefaultFunction(state.id)}\n            minRows={1}\n            maxRows={10}\n          />\n          <div className=\"flex flex-col gap-4\">\n            <div className=\"flex justify-between w-full gap-4\">\n              <div className=\"flex flex-col gap-4 w-full\">\n                <Label>Resource</Label>\n                <Select\n                  value={state.resourceId}\n                  onValueChange={(value) => handleChange({ resourceId: value })}\n                >\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Select a resource\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {DEFAULT_RESOURCES.map((resource) => (\n                      <SelectItem key={resource.id} value={resource.id}>\n                        <div className=\"flex items-center gap-2\">\n                          <img\n                            src={resource.logoUrl}\n                            alt={resource.name}\n                            className=\"w-4 h-4 object-contain\"\n                          />\n                          {resource.name}\n                        </div>\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n              <div className=\"flex flex-col gap-4 w-full\">\n                <Label>Model</Label>\n                <Input\n                  className=\"w-full\"\n                  type=\"text\"\n                  value={state.model}\n                  onChange={(e) => handleChange({ model: e.target.value })}\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-col gap-4\">\n              <Label>Prompt</Label>\n              <div className=\"flex flex-wrap gap-2 items-center\">\n                <p className=\"text-xs\">Variables:</p>\n                {uniqueVariables.length === 0 ? (\n                  <p className=\"text-xs text-stone-500\">None</p>\n                ) : (\n                  uniqueVariables.map((variable) => (\n                    <Badge\n                      variant={\"secondary\"}\n                      key={variable}\n                      className=\"text-orange-500\"\n                    >\n                      {variable}\n                    </Badge>\n                  ))\n                )}\n              </div>\n              <PromptInput\n                chatPromptProps={{\n                  value: state.messages,\n                  onChange: (value) => handleChange({ messages: value }),\n                }}\n              />\n            </div>\n            <div className=\"flex flex-col gap-4\">\n              <Label>Args</Label>\n              <CodeMirror\n                className={cn(\"w-full text-xs rounded-lg overflow-hidden\")}\n                theme={resolvedTheme === \"dark\" ? vscodeDark : vscodeLight}\n                extensions={[json(), EditorView.lineWrapping]}\n                value={state.args}\n                onChange={handleJsonChange}\n              />\n              {state.args !== \"\" && jsonError && (\n                <p className=\"text-red-500 text-xs\">{jsonError}</p>\n              )}\n            </div>\n            <div className=\"flex flex-col gap-4\">\n              <Label>Output Path</Label>\n              <ArrayInput\n                readOnly={false}\n                value={outputPathStr ?? \"\"}\n                onChange={(value) => setOutputPathStr(value)}\n                onArrayChange={(value) => handleChange({ outputPath: value })}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "\"use client\";\nimport { useFunction } from \"../../hooks/useFunction\";\nimport { DefaultFunctionDetailPanel } from \"./DefaultFunctionDetailPanel\";\nimport { LLMFunctionDetailPanel } from \"./LlmFunctionDetailPanel\";\n\ntype FunctionDetailPanelProps = {\n  id: string;\n  showMenuButton?: boolean;\n};\n\nexport function FunctionDetailPanel({\n  id,\n  showMenuButton,\n}: FunctionDetailPanelProps) {\n  const { data: functionData } = useFunction(id);\n  return (\n    <>\n      {functionData?.type === \"function\" && (\n        <DefaultFunctionDetailPanel\n          key={id}\n          id={id}\n          showMenuButton={showMenuButton}\n        />\n      )}\n      {functionData?.type === \"llm\" && (\n        <LLMFunctionDetailPanel\n          key={id}\n          id={id}\n          showMenuButton={showMenuButton}\n        />\n      )}\n    </>\n  );\n}\n"],
  "mappings": "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",
  "names": ["import_react", "React", "Root", "Portal", "Content", "Label", "Item", "CheckboxItem", "RadioItem", "ItemIndicator", "Separator", "SubTrigger", "SubContent", "DropdownMenu", "DropdownMenuTrigger", "DropdownMenuSubTrigger", "DropdownMenuSubContent", "DropdownMenuContent", "Content2", "DropdownMenuItem", "Item2", "DropdownMenuCheckboxItem", "DropdownMenuRadioItem", "DropdownMenuLabel", "Label2", "DropdownMenuSeparator", "import_jsx_dev_runtime", "id", "DropdownMenu", "DropdownMenuTrigger", "DropdownMenuContent", "DropdownMenuItem", "import_react", "import_remix_themes", "import_jsx_dev_runtime", "id", "DropdownMenu", "DropdownMenuTrigger", "DropdownMenuContent", "DropdownMenuItem", "Label", "import_jsx_dev_runtime"]
}
