{
  "version": 3,
  "sources": ["empty-module:./sessions.server", "css-bundle-plugin-ns:@remix-run/css-bundle", "../../app/root.tsx"],
  "sourcesContent": ["module.exports = {};", "export const cssBundleHref = \"/build/css-bundle-Z2NAYQ2X.css\";", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/root.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/root.tsx\");\n}\n// REMIX HMR END\n\nimport { cn } from \"@/lib/utils\";\nimport \"@fontsource/inter/100-italic.css?__remix_sideEffect__\";\nimport \"@fontsource/inter/100.css?__remix_sideEffect__\";\nimport \"@fontsource/inter/200-italic.css?__remix_sideEffect__\";\nimport \"@fontsource/inter/200.css?__remix_sideEffect__\";\nimport \"@fontsource/inter/300-italic.css?__remix_sideEffect__\";\nimport \"@fontsource/inter/300.css?__remix_sideEffect__\";\nimport \"@fontsource/inter/400-italic.css?__remix_sideEffect__\";\nimport \"@fontsource/inter/400.css?__remix_sideEffect__\";\nimport \"@fontsource/inter/500-italic.css?__remix_sideEffect__\";\nimport \"@fontsource/inter/500.css?__remix_sideEffect__\";\nimport \"@fontsource/inter/600-italic.css?__remix_sideEffect__\";\nimport \"@fontsource/inter/600.css?__remix_sideEffect__\";\nimport \"@fontsource/inter/700-italic.css?__remix_sideEffect__\";\nimport \"@fontsource/inter/700.css?__remix_sideEffect__\";\nimport \"@fontsource/inter/800-italic.css?__remix_sideEffect__\";\nimport \"@fontsource/inter/800.css?__remix_sideEffect__\";\nimport \"@fontsource/inter/900-italic.css?__remix_sideEffect__\";\nimport \"@fontsource/inter/900.css?__remix_sideEffect__\";\nimport { cssBundleHref } from \"@remix-run/css-bundle\";\nimport { Links, Meta, Outlet, Scripts, ScrollRestoration, useLoaderData } from \"@remix-run/react\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\nimport { ThemeProvider, useTheme } from \"remix-themes\";\nimport stylesheet from \"~/globals.css?url\";\nimport { themeSessionResolver } from \"./sessions.server\";\nexport const links = () => [{\n  rel: \"stylesheet\",\n  href: cssBundleHref\n}, {\n  rel: \"stylesheet\",\n  href: stylesheet\n}];\n\n// Return the theme from the session storage using the loader\nexport async function loader({\n  request\n}) {\n  const {\n    getTheme\n  } = await themeSessionResolver(request);\n  return {\n    theme: getTheme()\n  };\n}\nexport default function AppWithProviders() {\n  _s();\n  const data = useLoaderData();\n  return <ThemeProvider specifiedTheme={data.theme} themeAction=\"/action/set-theme\">\n      <App />\n    </ThemeProvider>;\n}\n_s(AppWithProviders, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = AppWithProviders;\nfunction App() {\n  _s2();\n  const [queryClient] = useState(() => new QueryClient({\n    defaultOptions: {\n      queries: {\n        // With SSR, we usually want to set some default staleTime\n        // above 0 to avoid refetching immediately on the client\n        staleTime: 60 * 1000\n      }\n    }\n  }));\n  const [theme] = useTheme();\n  return <html lang=\"en\" className={cn(theme)}>\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <Meta />\n        <Links />\n        <script src=\"https://unpkg.com/typescript@latest/lib/typescript.js\" />\n      </head>\n      <body className=\"overscroll-none\">\n        <QueryClientProvider client={queryClient}>\n          <Outlet />\n        </QueryClientProvider>\n        <ScrollRestoration />\n        <Scripts />\n      </body>\n    </html>;\n}\n_s2(App, \"O+zQdxPB5QCWIgUuMJL+k4rC5Ts=\", false, function () {\n  return [useTheme];\n});\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppWithProviders\");\n$RefreshReg$(_c2, \"App\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACAX,IAAM,gBAAgB;;;AC2C7B,IAAAA,gBAAyB;AACzB,0BAAwC;;;;;;AAExC,sBAAqC;AAwB/B;AArEN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,mBAAqB,EAAE;AAAA,EAChE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAAtB,IACE,MAAM,aAAa;AAErB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAc;AAChB;AA6BO,IAAM,QAAQ,MAAM,CAAC;AAAA,EAC1B,KAAK;AAAA,EACL,MAAM;AACR,GAAG;AAAA,EACD,KAAK;AAAA,EACL,MAAM;AACR,CAAC;AAac,SAAR,mBAAoC;AACzC,KAAG;AACH,QAAM,OAAO,cAAc;AAC3B,SAAO,mDAAC,qCAAc,gBAAgB,KAAK,OAAO,aAAY,qBAC1D,6DAAC,SAAD;AAAA;AAAA;AAAA;AAAA,SAAK,KADF;AAAA;AAAA;AAAA;AAAA,SAEL;AACJ;AACA,GAAG,kBAAkB,gCAAgC,OAAO,WAAY;AACtE,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,SAAS,MAAM;AACb,MAAI;AACJ,QAAM,CAAC,WAAW,QAAI,wBAAS,MAAM,IAAI,YAAY;AAAA,IACnD,gBAAgB;AAAA,MACd,SAAS;AAAA;AAAA;AAAA,QAGP,WAAW,KAAK;AAAA,MAClB;AAAA,IACF;AAAA,EACF,CAAC,CAAC;AACF,QAAM,CAAC,KAAK,QAAI,8BAAS;AACzB,SAAO,mDAAC,UAAK,MAAK,MAAK,WAAW,GAAG,KAAK,GACtC;AAAA,uDAAC,UACC;AAAA,yDAAC,UAAK,SAAQ,WAAd;AAAA;AAAA;AAAA;AAAA,aAAsB;AAAA,MACtB,mDAAC,UAAK,MAAK,YAAW,SAAQ,yCAA9B;AAAA;AAAA;AAAA;AAAA,aAAoE;AAAA,MACpE,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAM;AAAA,MACN,mDAAC,WAAD;AAAA;AAAA;AAAA;AAAA,aAAO;AAAA,MACP,mDAAC,YAAO,KAAI,2DAAZ;AAAA;AAAA;AAAA;AAAA,aAAoE;AAAA,SALtE;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,IACA,mDAAC,UAAK,WAAU,mBACd;AAAA,yDAAC,uBAAoB,QAAQ,aAC3B,6DAAC,YAAD;AAAA;AAAA;AAAA;AAAA,aAAQ,KADV;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,aAAmB;AAAA,MACnB,mDAAC,aAAD;AAAA;AAAA;AAAA;AAAA,aAAS;AAAA,SALX;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,OAdG;AAAA;AAAA;AAAA;AAAA,SAeL;AACJ;AACA,IAAI,KAAK,gCAAgC,OAAO,WAAY;AAC1D,SAAO,CAAC,4BAAQ;AAClB,CAAC;AACD,MAAM;AACN,IAAI;AAAJ,IAAQ;AACR,aAAa,IAAI,kBAAkB;AACnC,aAAa,KAAK,KAAK;AAEvB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_react"]
}
