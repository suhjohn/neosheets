openapi: 3.0.0
info:
  title: Anthropic Messages API
  version: 1.0.0
  description: API for creating messages with Anthropic's AI models

servers:
  - url: https://api.anthropic.com/v1

paths:
  /messages:
    post:
      summary: Create a Message
      description: Create a Message by sending input messages and receiving a generated response from the AI model.
      operationId: createMessage
      tags:
        - Messages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMessageRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      security:
        - ApiKeyAuth: []
        - AnthropicVersion: []

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
    AnthropicVersion:
      type: apiKey
      in: header
      name: anthropic-version

  schemas:
    CreateMessageRequest:
      type: object
      required:
        - model
        - messages
        - max_tokens
      properties:
        model:
          type: string
          description: The model that will complete your prompt.
        messages:
          type: array
          items:
            $ref: '#/components/schemas/InputMessage'
          description: Input messages for the conversation.
        max_tokens:
          type: integer
          description: The maximum number of tokens to generate before stopping.
        metadata:
          type: object
          description: An object describing metadata about the request.
        stop_sequences:
          type: array
          items:
            type: string
          description: Custom text sequences that will cause the model to stop generating.
        stream:
          type: boolean
          description: Whether to incrementally stream the response using server-sent events.
        system:
          oneOf:
            - type: string
            - type: array
              items:
                type: object
          description: System prompt for providing context and instructions to Claude.
        temperature:
          type: number
          description: Amount of randomness injected into the response.
        tool_choice:
          type: object
          description: How the model should use the provided tools.
        tools:
          type: array
          items:
            $ref: '#/components/schemas/Tool'
          description: Definitions of tools that the model may use.
        top_k:
          type: integer
          description: Only sample from the top K options for each subsequent token.
        top_p:
          type: number
          description: Use nucleus sampling.

    InputMessage:
      type: object
      required:
        - role
        - content
      properties:
        role:
          type: string
          enum: [user, assistant]
        content:
          oneOf:
            - type: string
            - type: array
              items:
                $ref: '#/components/schemas/ContentBlock'

    ContentBlock:
      oneOf:
        - $ref: '#/components/schemas/TextBlock'
        - $ref: '#/components/schemas/ImageBlock'

    TextBlock:
      type: object
      required:
        - type
        - text
      properties:
        type:
          type: string
          enum: [text]
        text:
          type: string

    ImageBlock:
      type: object
      required:
        - type
        - source
      properties:
        type:
          type: string
          enum: [image]
        source:
          $ref: '#/components/schemas/ImageSource'

    ImageSource:
      type: object
      required:
        - type
        - media_type
        - data
      properties:
        type:
          type: string
          enum: [base64]
        media_type:
          type: string
          enum: [image/jpeg, image/png, image/gif, image/webp]
        data:
          type: string

    Tool:
      type: object
      required:
        - name
        - input_schema
      properties:
        name:
          type: string
        description:
          type: string
        input_schema:
          type: object
        cache_control:
          type: object
          nullable: true

    Message:
      type: object
      required:
        - id
        - type
        - role
        - content
        - model
        - stop_reason
        - stop_sequence
        - usage
      properties:
        id:
          type: string
        type:
          type: string
          enum: [message]
        role:
          type: string
          enum: [assistant]
        content:
          type: array
          items:
            $ref: '#/components/schemas/ResponseContentBlock'
        model:
          type: string
        stop_reason:
          type: string
          enum: [end_turn, max_tokens, stop_sequence, tool_use]
          nullable: true
        stop_sequence:
          type: string
          nullable: true
        usage:
          $ref: '#/components/schemas/Usage'

    ResponseContentBlock:
      oneOf:
        - $ref: '#/components/schemas/TextBlock'
        - $ref: '#/components/schemas/ToolUseBlock'

    ToolUseBlock:
      type: object
      required:
        - type
        - id
        - name
        - input
      properties:
        type:
          type: string
          enum: [tool_use]
        id:
          type: string
        name:
          type: string
        input:
          type: object

    Usage:
      type: object
      description: Billing and rate-limit usage information.